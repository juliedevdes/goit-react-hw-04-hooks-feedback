{"version":3,"sources":["components/Statisctics.js/Statistics.module.css","components/FeedbackOptions/FeedbackOption.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Notification/Notification.js","components/Statisctics.js/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Notification","message","className","s","Statistics","good","bad","neutral","total","positivePercentage","list","item","defaultProps","FeedbackOptions","options","onLeaveFeedback","map","option","btn","onClick","Section","title","children","section","header","App","useState","setGood","setNeu","setBad","countTotalFeedback","e","target","textContent","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,gBCAzDD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,IAAM,4BAA4B,KAAO,+B,kBCA/FD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,0B,iBCA9DD,EAAOC,QAAU,CAAC,QAAU,gC,2GCEb,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGC,UAAWC,IAAEF,QAAhB,SAA0BA,I,oBCCpB,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,IACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OAAc,IAAVD,EACK,cAACR,EAAD,CAAcC,QAAQ,sBAG3B,8BACE,qBAAIC,UAAWC,IAAEO,KAAjB,UACE,qBAAIR,UAAWC,IAAEQ,KAAjB,mBAA8BN,KAC9B,qBAAIH,UAAWC,IAAEQ,KAAjB,sBAAiCJ,KACjC,qBAAIL,UAAWC,IAAEQ,KAAjB,kBAA6BL,KAC7B,qBAAIJ,UAAWC,IAAEQ,KAAjB,oBAA+BH,KAC/B,qBAAIN,UAAWC,IAAEQ,KAAjB,kCACwBF,EADxB,aASVL,EAAWQ,aAAe,CACxBP,KAAM,EACNE,QAAS,EACTD,IAAK,EACLE,MAAO,EACPC,mBAAoB,G,oBCjCP,SAASI,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,oBAAIb,UAAWC,IAAEO,KAAjB,SACGI,EAAQE,KAAI,SAACC,GAAD,OACX,oBAAiBf,UAAWC,IAAEQ,KAA9B,SACE,wBAAQT,UAAWC,IAAEe,IAAKC,QAASJ,EAAnC,SACGE,KAFIA,QAUjBJ,EAAgBD,aAAe,CAC7BE,QAAS,I,oBCfI,SAASM,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASpB,UAAWC,IAAEoB,QAAtB,UACE,oBAAIrB,UAAWC,IAAEqB,OAAjB,SAA0BH,IACzBC,KCFQ,SAASG,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOrB,EAAP,KAAasB,EAAb,KACA,EAA0BD,mBAAS,GAAnC,mBAAOnB,EAAP,KAAgBqB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOpB,EAAP,KAAYuB,EAAZ,KAEMC,EAAqB,kBAAMzB,EAAOC,EAAMC,GAuB9C,OACE,gCACE,cAACa,EAAD,CAASC,MAAM,6BAAf,SACE,cAACR,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAvBe,SAACgB,GAGtB,OAFwBA,EAAEC,OAAlBC,aAGN,IAAK,OACHN,GAAQ,SAACO,GAAD,OAAgBA,EAAa,KACrC,MACF,IAAK,UACHN,GAAO,SAACM,GAAD,OAAgBA,EAAa,KACpC,MACF,IAAK,MACHL,GAAO,SAACK,GAAD,OAAgBA,EAAa,KACpC,MACF,QACE,aAYF,cAACd,EAAD,CAASC,MAAM,aAAf,SACE,cAACjB,EAAD,CACEC,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOsB,IACPrB,mBACE0B,KAAKC,MAnCZ/B,EAAOyB,IAAwB,MAmCyB,SDnC7DV,EAAQR,aAAe,CAAES,MAAO,iBEThCgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,EAAD,MAEFe,SAASC,eAAe,W","file":"static/js/main.f10ab96e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__WALgf\",\"item\":\"Statistics_item__2qEqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOption_list__2ii-h\",\"btn\":\"FeedbackOption_btn__32xVe\",\"item\":\"FeedbackOption_item__3SWIR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__20i3o\",\"header\":\"Section_header__YEe5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__ee1E1\"};","import PropTypes from \"prop-types\";\nimport s from \"./Notification.module.css\";\n\nexport default function Notification({ message }) {\n  return <p className={s.message}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport Notification from \"../Notification/Notification.js\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nexport default function Statistics({\n  good,\n  bad,\n  neutral,\n  total,\n  positivePercentage,\n}) {\n  if (total === 0) {\n    return <Notification message=\"No feedback given\" />;\n  } else {\n    return (\n      <div>\n        <ul className={s.list}>\n          <li className={s.item}>Good: {good}</li>\n          <li className={s.item}>Neutral: {neutral}</li>\n          <li className={s.item}>Bad: {bad}</li>\n          <li className={s.item}>Total: {total}</li>\n          <li className={s.item}>\n            Positive percentage: {positivePercentage} %\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  positivePercentage: 0,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./FeedbackOption.module.css\";\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ul className={s.list}>\n      {options.map((option) => (\n        <li key={option} className={s.item}>\n          <button className={s.btn} onClick={onLeaveFeedback}>\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFeedbackOptions.defaultProps = {\n  options: [],\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.header}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = { title: PropTypes.string.isRequired };\nSection.defaultProps = { title: \"Section title\" };\n","import { useState } from \"react\";\nimport Statistics from \"./components/Statisctics.js/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeu] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countTotalFeedback = () => good + bad + neutral;\n\n  const countPositiveFeedbackPercentage = () =>\n    (good / countTotalFeedback()) * 100;\n\n  const handleFeedBack = (e) => {\n    const { textContent } = e.target;\n\n    switch (textContent) {\n      case \"Good\":\n        setGood((prevState) => (prevState += 1));\n        break;\n      case \"Neutral\":\n        setNeu((prevState) => (prevState += 1));\n        break;\n      case \"Bad\":\n        setBad((prevState) => (prevState += 1));\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leave your feedback\">\n        <FeedbackOptions\n          options={[\"Good\", \"Neutral\", \"Bad\"]}\n          onLeaveFeedback={handleFeedBack}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={\n            Math.round(countPositiveFeedbackPercentage()) || 0\n          }\n        />\n      </Section>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}